
    <FtModal @ref="Modal" Size="80" Title=@("Sous ingrédients de "+Ingredient?.Name)>
        @if (Ingredient != null)
        {
            <MatDialogTitle>Sous ingrédient de @Ingredient.Name</MatDialogTitle>
            <MatDialogContent>
                <p>Ajouter une photo de la liste des ingrédients</p>
                <UploadFileDisplay @ref="Uploader" ImageOnly="true" MultipleFile="false" FilesNames="@Ingredient.Pictures" />
                <p>Ajouter et choisissez les sous-ingrédients</p>
                <div class="row">
                    <div class="col">
                        <MatTextField @bind-Value="@subIngredientName" OnKeyPress="NameKeyPressed" Label="Nom de l'ingrédient"></MatTextField>
                    </div>
                    <div class="col-md-auto">
                        <MatFAB OnClick="@AddSubIngredient" Type="button" Icon="@MatIconNames.Add" />
                    </div>
                </div>
                <div class="row" style="min-height:200px">
                    @if (Ingredient.ChildsIngredients.Any())
                    {
                        <table class="table">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th>Nom</th>
                                    <th>Pourcentage</th>
                                    <th>Est bio</th>
                                    <th>Allergène</th>
                                    <th>Informations complémentaire</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var subIngredient in Ingredient.ChildsIngredients.OrderBy(x => x.Order))
                                {
                                    <tr>
                                        <td>
                                            <MatIconButton Disabled="@(subIngredient.Order==1)" Icon="expand_less" OnClick="@(()=>Up(subIngredient))"></MatIconButton>
                                            @subIngredient.Order
                                            <MatIconButton Disabled="@(subIngredient.Order==Ingredient.ChildsIngredients.Count())" Icon="expand_more" OnClick="@(()=>Down(subIngredient))"></MatIconButton>
                                        </td>
                                        <td><MatTextField Label="Nom" @bind-Value="@subIngredient.Name" /></td>
                                        <td>
                                            <MatNumericUpDownField Label="Pourcentage" @bind-Value="@subIngredient.Percentage" DecimalPlaces=2 Minimum="0" Maximum="100" FieldType="MatNumericUpDownFieldType.Percent" />
                                        </td>
                                        <td><FtToggle @bind-Value="subIngredient.IsOrganic" LabelWhenFalse="non" LabelWhenTrue="Bio" /></td>
                                        <td><FtToggle @bind-Value="subIngredient.IsAllergen" LabelWhenFalse="non" LabelWhenTrue="Allergène" /></td>
                                        <td><MatTextField HelperText="A ajouter sur l'étiquette : origine viande (boeuf), aoc, aop ..." Label="Informations complémentaire" @bind-Value="@subIngredient.ComplementaryInformations" /></td>
                                        <td><MatButton Type="button" OnClick="@(e => { RemoveSubIngredient(subIngredient); })">Retirer</MatButton></td>

                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                </div>
            </MatDialogContent>
            <MatDialogActions>
                <MatButton OnClick="@Validate">Valider</MatButton>
            </MatDialogActions>
        }
    </FtModal>

@code{

    UploadFileDisplay Uploader;
    FtModal Modal;
    string subIngredientName;

    [Parameter]
    public List<SubIngredient> SubIngredients { get; set; }

    [Parameter]
    public Ingredient Ingredient { get; set; }

    void NameKeyPressed(KeyboardEventArgs args)
    {
        if (args.Key == "Enter")
        {
            AddSubIngredient();
        }
    }

    void AddSubIngredient()
    {
        Ingredient.ChildsIngredients.Add(new SubIngredient
        {
            Order = Ingredient.ChildsIngredients.Count + 1,
            Name = subIngredientName
        });
        subIngredientName = "";
    }

    void RemoveSubIngredient(SubIngredient subIngredient)
    {
        Ingredient.ChildsIngredients.Remove(subIngredient);
    }

    void Up(SubIngredient subIngredient)
    {
        Ingredient.ChildsIngredients.First(x => x.Order == subIngredient.Order - 1).Order = subIngredient.Order;
        subIngredient.Order = subIngredient.Order - 1;
    }

    void Down(SubIngredient subIngredient)
    {
        Ingredient.ChildsIngredients.First(x => x.Order == subIngredient.Order + 1).Order = subIngredient.Order;
        subIngredient.Order = subIngredient.Order + 1;
    }

    void Validate()
    {
        Uploader.SaveAndReset();
        Modal.Close();
    }

    public void SetIngredient(Ingredient ingredient)
    {
        Ingredient = ingredient;
    }


    public void Open()
    {
        Modal.Open();
    }
}